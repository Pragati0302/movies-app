{"version":3,"sources":["components/Card/Card.js","components/Header/Header.js","components/Movies/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","movies","react_default","a","createElement","className","filter","movie","Poster","map","index","key","src","alt","Title","Year","Header","searchMovie","query","setQuery","react","onSubmit","htmlFor","type","name","placeholder","value","onChange","e","target","components_Card_Card","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Movies","_useState","useState","_useState2","slicedToArray","setMovies","_useState3","_useState4","asyncToGenerator","_callee","apiURI","response","data","_context","preventDefault","concat","axios","get","Search","console","log","t0","_x","apply","arguments","components_Header_Header","App","components_Movies_Movies","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.03cc5d7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ movies }) => {\r\n    return (\r\n\r\n        <div className=\"cardlist__movies\">\r\n            {movies.filter(movie => movie.Poster).map((movie, index) => (\r\n                <div className=\"card\" key={index}>\r\n                    <img\r\n                        className=\"movie__image\"\r\n                        src={movie.Poster}\r\n                        alt=\"postal\"\r\n                    />\r\n                    <div className=\"flex__card\">\r\n                        <p className=\"heading\">{movie.Title}</p>\r\n                        <p className=\"paragraph\">{movie.Year}</p>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { Fragment } from 'react';\r\nimport './Header.css';\r\nimport Card from '../Card/Card';\r\n\r\n//destructure props\r\nconst Header = ({ searchMovie, query, setQuery, movies }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">Movie-search</h1>\r\n\r\n                {/*Search form*/}\r\n\r\n                <div className=\"search\">\r\n                    <form className=\"search-form\" onSubmit={searchMovie}>\r\n                        <label\r\n                            htmlFor=\"query\"\r\n                            className=\"name\"\r\n                        >\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"query\"\r\n                            placeholder=\"i.e Guardians of the Galaxy Vol. 2\"\r\n                            value={query}\r\n                            onChange={(e) => setQuery(e.target.value)}\r\n                        />\r\n                        <button type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='list-movie'>\r\n                <Card movies = {movies} />\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport Header from '../Header/Header';\r\nimport axios from 'axios';\r\nimport './Movies.css'\r\n\r\nconst Movies = () => {\r\n   //states\r\n    const [movies, setMovies] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n\r\n  //Consume the API\r\n    const searchMovie = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_KEY = \"b57e0c63\"; //use your personal API Key\r\n        const apiURI = `https://www.omdbapi.com/?i=tt3896198&apikey=${API_KEY}&s=${query}`;\r\n\r\n        try {\r\n            const response = await axios.get(apiURI);\r\n            const data = response.data.Search\r\n            console.log(data);\r\n\r\n           //setState\r\n            setMovies(data);\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"shoppies\">\r\n         {/*Header component*/}\r\n            <Header\r\n                searchMovie={searchMovie}\r\n                query={query}\r\n                setQuery={setQuery}\r\n                movies={movies}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","import React from 'react';\nimport './App.css';\nimport Movies from './components/Movies/Movies';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Movies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}